// <auto-generated />
using System;
using FullstackDeveloperAssessment.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FullstackDeveloperAssessment.Data.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.Person", b =>
                {
                    b.Property<int>("VAT")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DateOfRecord");

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SecretCode")
                        .IsRequired();

                    b.HasKey("VAT");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.PersonAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("PersonVAT");

                    b.Property<string>("PostalZipCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("StateProvinceRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PersonVAT")
                        .IsUnique();

                    b.ToTable("PersonAddresses");
                });

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.PersonPersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonTypeId");

                    b.Property<int?>("PersonVAT");

                    b.HasKey("Id");

                    b.HasIndex("PersonTypeId");

                    b.HasIndex("PersonVAT");

                    b.ToTable("PersonsPersonTypes");
                });

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("PersonTypes");
                });

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.PersonAddress", b =>
                {
                    b.HasOne("FullstackDeveloperAssessment.Domain.Entyties.Person", "Person")
                        .WithOne("PersonAddress")
                        .HasForeignKey("FullstackDeveloperAssessment.Domain.Entyties.PersonAddress", "PersonVAT")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FullstackDeveloperAssessment.Domain.Entyties.PersonPersonType", b =>
                {
                    b.HasOne("FullstackDeveloperAssessment.Domain.Entyties.PersonType", "PersonType")
                        .WithMany("PersonPersonTypes")
                        .HasForeignKey("PersonTypeId");

                    b.HasOne("FullstackDeveloperAssessment.Domain.Entyties.Person", "Person")
                        .WithMany("PersonPersonTypes")
                        .HasForeignKey("PersonVAT");
                });
#pragma warning restore 612, 618
        }
    }
}
